docker rm -f $(docker ps -aq)

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



 // aws s3 에 파일을 올림
        stage('Deploy Frontend') {
          steps {
            echo 'Deploying Frontend'
            // 프론트엔드 디렉토리의 정적파일들을 S3 에 올림, 이 전에 반드시 EC2 instance profile 을 등록해야함.
            dir ('./website'){
                sh '''
                aws s3 sync ./ s3://seungyongtest
                '''
            }
          }

          post {
              // If Maven was able to run the tests, even if some of the test
              // failed, record the test results and archive the jar file.
              success {
                  echo 'Successfully Cloned Repository'

                  mail  to: 'seungyong@saltlux.com',
                        subject: "Deploy Frontend Success",
                        body: "Successfully deployed frontend!"
              }

              failure {
                  echo 'I failed :('

                  mail  to: 'seungyong@saltlux.com',
                        subject: "Failed Pipelinee",
                        body: "Something is wrong with deploy frontend"
              }
          }
        }
        
        stage('Lint Backend') {
            // Docker plugin and Docker Pipeline 두개를 깔아야 사용가능!
            agent {
              docker {
                image 'node:latest'
              }
            }
            
            steps {
              dir ('./server'){
                  sh '''
                  npm install&&
                  npm run lint
                  '''
              }
            }
        }
        
        stage('Test Backend') {
          agent {
            docker {
              image 'node:latest'
            }
          }
          steps {
            echo 'Test Backend'

            dir ('./server'){
                sh '''
                npm install
                npm run test
                '''
            }
          }
        }

      stage('Bulid Backend') {
        agent any

        steps {
          echo 'Build Backend'

          dir ('./server'){
              sh '''
              docker build . -t server
              '''
          }
        }

        post {
          failure {
            error 'This pipeline stops here...'
          }
        }
      }
        
      stage('Deploy Backend') {
        agent any

        steps {
          echo 'Build Backend'

          dir ('./server'){
              sh '''
              docker run -p 80:80 -d server
              '''
          }
        }

        post {
          success { 
            mail to: 'seungyong@saltlux.com',
                 subject: "Deploy Success",
                 body: "Successfully deployed!"
                
          }
        }
      }
    